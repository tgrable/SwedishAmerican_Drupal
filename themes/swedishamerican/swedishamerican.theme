<?php
/**
 * @file
 * Bootstrap sub-theme.
 *
 * Place your custom PHP code in this file.
 */

/**
 * Implements hook_preprocess_html() for page.html.twig.
 */
 function swedishamerican_preprocess_html(array &$variables) {}

/**
 * Implements hook_preprocess_page() for page.html.twig.
 */
function swedishamerican_preprocess_page(array &$variables) {
  // Inject a flag based on the current message queue.
  $variables['available_messages'] = !empty(drupal_get_messages(NULL, FALSE));

  $block = \Drupal\block\Entity\Block::load('swedishamerican_search'); 
  $variables['block_search_form'] = \Drupal::entityTypeManager()
      ->getViewBuilder('block')
      ->view($block);
  
  if (\Drupal::routeMatch()->getRouteName() == 'entity.taxonomy_term.canonical') {
    $term_id = \Drupal::routeMatch()->getRawParameter('taxonomy_term');
    $term = \Drupal\taxonomy\Entity\Term::load($term_id);
    if (strcmp ($term->getVocabularyId(), 'locations') === 0) {
      $variables['term_page'] = $term_id;
      $variables['content_width'] = 'overlay';

      $block = \Drupal\block\Entity\Block::load('swedishamericanlocationproviders');
      $variables['block_output'] = \Drupal::entityTypeManager()
        ->getViewBuilder('block')
        ->view($block);
    }
  }
  else if (\Drupal::routeMatch()->getRouteName() == 'entity.node.canonical') {
    if (strcmp ($variables['node']->getType(), 'provider') === 0) {
      $variables['content_width'] = 'overlay';
      $variables['content_view_mode'] = 'full';
    }
    else if (strcmp ($variables['node']->getTitle(), 'Providers') === 0 || strcmp ($variables['node']->getTitle(), 'Events') === 0) {
       $variables['content_width'] = 'full';
       $variables['content_view_mode'] = 'full';
    }
    else {}
  }
  else if (\Drupal::routeMatch()->getRouteName() == 'view.locations.page_1') {  
       $variables['content_width'] = 'full';
       $variables['content_view_mode'] = 'full';
  }
}

/**
 * Implements hook_preprocess_node() for node.html.twig.
 */
function swedishamerican_preprocess_node(array &$variables) {
  $path = '/node/' . $variables['node']->id();
  $path_alias = \Drupal::service('path.alias_manager')->getAliasByPath($path);
  $variables['path_alias'] = $path_alias;

  if (strcmp ($variables['node']->getType(), 'article') === 0 || strcmp ($variables['node']->getType(), 'page') === 0) {
    if (!is_null($variables['node'])) {
      $uid = $variables['node']->getOwnerId();
      $user = \Drupal\user\Entity\User::load($uid);
      if (!is_null($user)) {
        $username = $user->getDisplayName();
        $variables['username'] = $username;
        // {{ username }} will be available within block.html.twig.
        $date = $variables['node']->getCreatedTime();
        $variables['unix_date'] = $date;
      }
    }
  }
  else if (strcmp ($variables['node']->getType(), 'provider') === 0) {
    $specialty_term_array = $variables['node']->get('field_specialty')->getValue();
    $specialty_term_id = $specialty_term_array[0]['target_id'];
    $specialty_term = \Drupal\taxonomy\Entity\Term::load($specialty_term_id);
    $specialty_term_name = $specialty_term->get('name')->getValue();
    $variables['specialty_field'] = $specialty_term_name[0]['value'];
  }
}

/**
 * Implements hook_preprocess_taxonomy_term() for taxonomy-term.html.twig.
 */
function swedishamerican_preprocess_taxonomy_term(array &$variables) {}

/**
 * Implements hook_theme_spreprocess_block()
 * @param array $variables
 */
function swedishamerican_preprocess_block(&$variables) {
  if (isset($variables['elements']['content']['#block_content'])) {
    $block = $variables['elements']['content']['#block_content']->toArray();
    if (isset($block['field_column_width'])) {
      if (count($block['field_column_width']) > 0) {
        $variables['customWidthVariable'] = $block['field_column_width'][0]['value'];
      }
    } 
  }
}

function swedishamerican_preprocess_menu(array &$variables) {
  // dsm($variables['items']);
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for form templates.
 * @param array $suggestions
 * @param array $variables
 */
function swedishamerican_theme_suggestions_block_alter(array &$suggestions, array $variables) {
  // Block suggestions for custom block bundles.
  if (isset($variables['elements']['content']['#block_content'])) {
    array_splice($suggestions, 1, 0, 'block__bundle__' . $variables['elements']['content']['#block_content']->bundle());
  }
}

function swedishamerican_preprocess_paragraph(array &$variables) {
  if (strcmp ($variables['elements']['#paragraph']->getType(), 'provider_location') === 0 || strcmp ($variables['elements']['#paragraph']->getType(), 'service_location') === 0) {
    $paragraph = $variables['elements']['#paragraph'];
    $term = $paragraph->get('field_location_reference')->entity;
    
    if (isset($term)) {
      $variables['paragraph_field_name'] = $term->getName();
      $variables['paragraph_field_address'] = $term->get('field_address')->value;
      $variables['paragraph_field_city'] = $term->get('field_city')->value;
      $variables['paragraph_field_state'] = $term->get('field_state')->value;
      $variables['paragraph_field_zip'] = $term->get('field_zip')->value;
      $variables['paragraph_field_phone'] = $term->get('field_phone')->value;
      $variables['paragraph_field_email'] = $term->get('field_email_address')->value;

      $path = '/taxonomy/term/' . $term->id();
      $path_alias = \Drupal::service('path.alias_manager')->getAliasByPath($path);
      $variables['term_path_alias'] = $path_alias;
      
      if (\Drupal::routeMatch()->getRouteName() == 'entity.node.canonical') {
        $nid = \Drupal::routeMatch()->getRawParameter('node');
        $node = \Drupal\node\Entity\Node::load($nid);
        if (strcmp ($node->getType(), 'service') === 0) {
          $variables['service_page'] = 'service_page';
        }
      }
    }
  }  
}

function swedishamerican_form_alter(&$form, &$form_state, $form_id){
  if($form_id == "views_exposed_form"){

    //name
    if (isset($form['name'])) {
      $form['name']['#attributes'] = array('placeholder' => array(t('Location Name')), 'class' => array('views-auto-submit'));
    }

    //field_city_value
    if (isset($form['field_city_value'])) {
      $form['field_city_value']['#attributes'] = array('placeholder' => array(t('City')), 'class' => array('views-auto-submit'));
    }

    //field_service_reference_target_id
    if (isset($form['field_service_reference_target_id'])) {
      $form['field_service_reference_target_id']['#attributes'] = array('class' => array('views-auto-submit'));
      foreach ($form['field_service_reference_target_id']['#options'] as $key => &$option) {
        if ($key == 'All') {
          $option = 'Specialty';
        }
      }
    }
  }
}