{#
/**
 * @file
 * Default theme implementation to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - node.getCreatedTime() will return the node creation timestamp.
 *   - node.hasField('field_example') returns TRUE if the node bundle includes
 *     field_example. (This does not indicate the presence of a value in this
 *     field.)
 *   - node.isPublished() will return whether the node is published or not.
 *   Calling other methods, such as node.delete(), will result in an exception.
 *   See \Drupal\node\Entity\Node for a full list of public properties and
 *   methods for the node object.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 *
 * @ingroup themeable
 */
#}
<div{{ attributes }}>
  <div class="service-container">
    <div class="term-content-container inline">
        <div class="title">
            <h1>{{ label }}</h1>
        </div>
        <hr />

        {% if node.field_phone|length > 0 or node.field_email_address|length > 0 or node.field_hours|length > 0 %}
            <div class="phone-email inline-desktop">
                <div class="phone-email-container">
                    {% if node.field_phone.0.value %}
                        <div class="location-header">Contact</div>
                        <div class="phone">
                            <div class="icon inline">
                                <p><i class="fa fa-phone"></i></p>
                            </div>
                            <div class="result inline">
                                <p>{{ node.field_phone.0.value }}</p>
                            </div>
                        </div>
                    {% endif %}
                    {% if node.field_email_address.0.value %}
                        <div class="email">
                            <div class="icon inline">
                                <p><i class="fa fa-envelope"></i></p>
                            </div>
                            <div class="result inline">
                                <p>{{ node.field_email_address.0.value }}</p>
                            </div>
                        </div>
                    {% endif %}
                </div>
                {% if node.field_hours|length > 0 %}
                    <div class="location-header">Hours</div>
                    <div class="hours">
                        <div class="result inline">
                            {% for hour in node.field_hours %}
                                <p>{{ hour.value }}</p>
                            {% endfor %}
                        </div>
                    </div>
                {% endif %}
            </div>
        {% endif %}
        <div class="location-address inline-desktop">
            <div class="location">
                {% if node.field_location|length > 1 %}
                    <div class="location-header">Locations</div>
                    {% for location in locations %}
                        <div class="address inline">
                            <iframe width="150" height="150" frameborder="0" style="border:0" src="https://maps.google.com/maps?hl=EN&amp;q={{ location["map"]|replace({' ':'+'}) }}&amp;t=M&amp;z=14&amp;output=embed"></iframe>
                            <p>
                                <a href="{{ location["alias"] }}">{{ location["name"] }}</a><br />
                                {{ location["address"] }}<br />
                                {{ location["city"]}}, {{ location["state"] }} {{ location["zip"] }}
                            </p>
                        </div>
                    {% endfor %}
                {% else %}
                    {{ content.field_location }} 
                {% endif %} 
            </div>
        </div>

        <hr />
    </div> {# end term-content-container #}
  </div>

  {% if node.field_body|length > 0 %}
    <div class="service-body-copy">
        {{ content.body }}
    </div>
  {% endif %}

  {% if node.field_faq|length > 0 %}
    <div class="service-faqs">
        {{ content.field_faq }}
    </div>
  {% endif %}
  
</div>